@{
    ViewData["Title"] = "Notifications and Alerts - Second Harvest Northland Grants Management System";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/style.css">
    <script>
        async function fetchNotificationPreferences() {
            try {
                const response = await fetch('@Url.Action("GetPreferences", "Notifications")');
                const preferences = await response.json();

                document.getElementById('application-status').checked = preferences.applicationStatus;
                document.getElementById('reporting-deadlines').checked = preferences.reportingDeadlines;
                document.getElementById('fund-disbursement').checked = preferences.fundDisbursement;
            } catch (error) {
                console.error('Error fetching notification preferences:', error);
            }
        }

        document.addEventListener('DOMContentLoaded', fetchNotificationPreferences);

        document.querySelector('form').addEventListener('submit', async (event) => {
            event.preventDefault(); // Prevent default form submission

            const preferences = {
                applicationStatus: document.getElementById('application-status').checked,
                reportingDeadlines: document.getElementById('reporting-deadlines').checked,
                fundDisbursement: document.getElementById('fund-disbursement').checked,
            };

            try {
                const response = await fetch('@Url.Action("SavePreferences", "Notifications")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(preferences),
                });

                if (response.ok) {
                    alert('Preferences saved successfully.');
                } else {
                    alert('Failed to save preferences. Please try again.');
                }
            } catch (error) {
                console.error('Error saving notification preferences:', error);
            }
        });

        async function fetchAlertHistory() {
            try {
                const response = await fetch('@Url.Action("GetAlertHistory", "Notifications")');
                const alerts = await response.json();

                const alertList = document.getElementById('alert-history').querySelector('ul');
                alertList.innerHTML = ''; // Clear existing alerts

                alerts.forEach(alert => {
                    const listItem = document.createElement('li');
                    listItem.innerHTML = `<strong>${alert.date}:</strong> ${alert.message}`;
                    alertList.appendChild(listItem);
                });
            } catch (error) {
                console.error('Error fetching alert history:', error);
            }
        }

        document.addEventListener('DOMContentLoaded', fetchAlertHistory);
    </script>
</head>
<body>

    <header>
        <h1>Notifications & Alerts</h1>
        <nav>
            <ul>
                <li><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
                <li><a href="@Url.Action("SystemSettings", "Settings")">System Settings</a></li>
            </ul>
        </nav>
    </header>

    <main>
        <section id="notification-preferences">
            <h2>Notification Preferences</h2>
            <form>
                <div class="form-group">
                    <label for="notification-type">Types of Notifications:</label>
                    <div>
                        <input type="checkbox" id="application-status" checked>
                        <label for="application-status">Application Status Changes</label>
                    </div>
                    <div>
                        <input type="checkbox" id="reporting-deadlines" checked>
                        <label for="reporting-deadlines">Upcoming Reporting Deadlines</label>
                    </div>
                    <div>
                        <input type="checkbox" id="fund-disbursement" checked>
                        <label for="fund-disbursement">Fund Disbursement Alerts</label>
                    </div>
                </div>
                <button type="submit">Save Preferences</button>
            </form>
        </section>

        <section id="alert-history">
            <h2>Alert History</h2>
            <ul>
                <!-- Dynamic alert history will be populated here -->
                @foreach (var alert in Model.AlertHistory)
                {
                    <li><strong>@alert.Date:</strong> @alert.Message</li>
                }
            </ul>
        </section>
    </main>

    <footer>
        <p>&copy; 2024 Second Harvest Northland</p>
    </footer>

</body>
</html>
